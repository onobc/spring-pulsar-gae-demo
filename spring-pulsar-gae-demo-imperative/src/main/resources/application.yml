
server.port: ${PORT:0}

spring:
  config:
    import:
      - optional:file:./env/.cloudenv.yaml
      - optional:file:../env/.cloudenv.yaml
  pulsar:
    producer:
      cache:
        expire-after-access: 10s
demo:
  tenant: public
  namespace: default
  topic-name: "persistent://${demo.tenant}/${demo.namespace}/sps-gae-imperative-demo-topic"

---
spring:
  config:
    activate:
      on-profile: "datastax"
  pulsar:
    client:
      auth-plugin-class-name: org.apache.pulsar.client.impl.auth.AuthenticationToken
      authentication:
        token: ${DATASTAX_AUTH_TOKEN:<auth-token-goes-here>}
      service-url: ${DATASTAX_BROKER_URL:<broker-service-url-goes-here>}
    administration:
      auth-plugin-class-name: org.apache.pulsar.client.impl.auth.AuthenticationToken
      authentication:
        token: ${DATASTAX_AUTH_TOKEN:<auth-token-goes-here>}
      service-url: ${DATASTAX_ADMIN_URL:<admin-service-url-goes-here>}
demo:
  tenant: ${DATASTAX_TENANT:<tenant-goes-here>}
  namespace: ${DATASTAX_NAMESPACE:<namespace-goes-here>}

---
spring:
  config:
    activate:
      on-profile: "streamnative"
  pulsar:
    client:
      auth-plugin-class-name: org.apache.pulsar.client.impl.auth.AuthenticationToken
      authentication:
        token: ${STREAM_NATIVE_AUTH_TOKEN:<auth-token-goes-here>}
      service-url: ${STREAM_NATIVE_BROKER_URL:<broker-service-url-goes-here>}
    administration:
      auth-plugin-class-name: org.apache.pulsar.client.impl.auth.AuthenticationToken
      authentication:
        token: ${STREAM_NATIVE_AUTH_TOKEN:<auth-token-goes-here>}
      service-url: ${STREAM_NATIVE_ADMIN_URL:<admin-service-url-goes-here>}
demo:
  tenant: ${STREAM_NATIVE_TENANT:<tenant-goes-here>}
  namespace: ${STREAM_NATIVE_NAMESPACE:<namespace-goes-here>}
